@model Milty.Models.UserTask

@{
    ViewBag.Title = "Редактирование задачи";

    var backRepo = "";
    if (Request["backto"] != null)
    {
        backRepo = Request["backto"];
    }

    Milty.Models.ApplicationDbContext db = new Milty.Models.ApplicationDbContext();

    List<Milty.Models.NewListItem> Repositoies = new List<Milty.Models.NewListItem>();

    foreach (var repo in db.Repositories.ToList()) {
        Repositoies.Add(new Milty.Models.NewListItem
        {
            Text = repo.Name,
            Value = repo.Id.ToString(),
            Selected = repo.Id.ToString().Equals(Model.Repository)
        });
    }

}

<h2>Редактирование задачи</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Repository, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Repository" name="Repository">
                    @foreach (Milty.Models.NewListItem listItem in Repositoies)
                    {
                        <option value="@listItem.Value" @listItem.GetSelected()>@listItem.Text</option>
                    }
                    <option value=""></option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div>
        @if (backRepo == "")
        {
            @Html.ActionLink("Вернуться к списку", "Index")
        }
        else
        {
            @Html.ActionLink("Вернуться к списку", "Details", "Repositories", new { id = backRepo }, null)
        }
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
